package com.example.happybirthday

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.horizontalScroll
import androidx.compose.foundation.layout.*
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Surface
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.geometry.Size
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.Color.Companion.Blue
import androidx.compose.ui.graphics.Color.Companion.White
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.happybirthday.ui.theme.HappyBirthdayTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            HappyBirthdayTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colors.background
                ) {
                    BirthdayGreetingWithImage( "Jetpack Compose")
                    BirthdayGreetingImage("Sakshi Gupta")
                }
            }
        }
    }
}

@Composable
fun BirthdayGreetingWithText(message: String)
{
    Column(horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Bottom){
        Text(text = message, color = Color(8,48,66), fontSize = 36.sp, modifier = Modifier
            .fillMaxWidth()
            .wrapContentWidth(Alignment.CenterHorizontally)
            .padding(25.dp, 25.dp, 10.dp, 200.dp)
        )
    }

}
@Composable
fun BirthdayGreetingMessage(message1: String)
{
    Column(horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Bottom){
        Text(text = message1, color = Color(56,112,179), fontSize = 36.sp, modifier = Modifier
            .fillMaxWidth()
            .wrapContentWidth(Alignment.CenterHorizontally)
            .padding(55.dp, 55.dp, 50.dp, 390.dp)

        )
    }
}



@Composable
fun BirthdayGreetingWithImage(message: String) {
    val image = painterResource(R.drawable.logo)
    val image1 = painterResource(R.drawable.hr)

        Column( horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {
            Image(painter = image, contentDescription = null, modifier = Modifier.size(122.dp, 122.dp))
            Image(painter = image1, contentDescription = null, modifier = Modifier.size(100.dp,300.dp))
        }

        BirthdayGreetingWithText(message = message )
}
@Composable
fun BirthdayGreetingImage(message1: String)
{
    BirthdayGreetingMessage(message1 = message1)
}
@Preview(showBackground = false)
@Composable
fun BirthdayGreetingWithTextPreview() {
    HappyBirthdayTheme {
       BirthdayGreetingWithImage(message = "Jetpack Compose" )
        BirthdayGreetingMessage(message1 = "Sakshi Gupta")
    }
}
